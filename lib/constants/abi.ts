export const CURTA_ABI = [
  {
    inputs: [
      { internalType: 'contract AuthorshipToken', name: '_authorshipToken', type: 'address' },
      { internalType: 'contract FlagRenderer', name: '_flagRenderer', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
    name: 'AuthorshipTokenAlreadyUsed',
    type: 'error',
  },
  { inputs: [], name: 'IncorrectSolution', type: 'error' },
  { inputs: [], name: 'InsufficientFunds', type: 'error' },
  {
    inputs: [{ internalType: 'uint32', name: '_puzzleId', type: 'uint32' }],
    name: 'PuzzleAlreadyFermat',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint32', name: '_puzzleId', type: 'uint32' }],
    name: 'PuzzleAlreadySolved',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint32', name: '_puzzleId', type: 'uint32' }],
    name: 'PuzzleDoesNotExist',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint32', name: '_puzzleId', type: 'uint32' }],
    name: 'PuzzleNotFermat',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint32', name: '_puzzleId', type: 'uint32' }],
    name: 'PuzzleNotSolved',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint32', name: '_puzzleId', type: 'uint32' }],
    name: 'SubmissionClosed',
    type: 'error',
  },
  { inputs: [], name: 'Unauthorized', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint32', name: 'id', type: 'uint32' },
      { indexed: true, internalType: 'address', name: 'author', type: 'address' },
      { indexed: false, internalType: 'contract IPuzzle', name: 'puzzle', type: 'address' },
    ],
    name: 'AddPuzzle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint32', name: 'id', type: 'uint32' },
      { indexed: true, internalType: 'address', name: 'solver', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'solution', type: 'uint256' },
      { indexed: false, internalType: 'uint8', name: 'phase', type: 'uint8' },
    ],
    name: 'SolvePuzzle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint32', name: 'id', type: 'uint32' },
      { indexed: false, internalType: 'uint256', name: 'colors', type: 'uint256' },
    ],
    name: 'UpdatePuzzleColors',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'contract IPuzzle', name: '_puzzle', type: 'address' },
      { internalType: 'uint256', name: '_tokenId', type: 'uint256' },
    ],
    name: 'addPuzzle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_spender', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'authorshipToken',
    outputs: [{ internalType: 'contract AuthorshipToken', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fermat',
    outputs: [
      { internalType: 'uint32', name: 'puzzleId', type: 'uint32' },
      { internalType: 'uint40', name: 'timeTaken', type: 'uint40' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'flagRenderer',
    outputs: [{ internalType: 'contract FlagRenderer', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    name: 'getPuzzle',
    outputs: [
      { internalType: 'contract IPuzzle', name: 'puzzle', type: 'address' },
      { internalType: 'uint40', name: 'addedTimestamp', type: 'uint40' },
      { internalType: 'uint40', name: 'firstSolveTimestamp', type: 'uint40' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    name: 'getPuzzleAuthor',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    name: 'getPuzzleColorsAndSolves',
    outputs: [
      { internalType: 'uint120', name: 'colors', type: 'uint120' },
      { internalType: 'uint32', name: 'phase0Solves', type: 'uint32' },
      { internalType: 'uint32', name: 'phase1Solves', type: 'uint32' },
      { internalType: 'uint32', name: 'phase2Solves', type: 'uint32' },
      { internalType: 'uint32', name: 'solves', type: 'uint32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'getTokenData',
    outputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'uint40', name: 'solveTimestamp', type: 'uint40' },
      { internalType: 'uint56', name: 'solveMetadata', type: 'uint56' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'getUserBalances',
    outputs: [
      { internalType: 'uint32', name: 'phase0Solves', type: 'uint32' },
      { internalType: 'uint32', name: 'phase1Solves', type: 'uint32' },
      { internalType: 'uint32', name: 'phase2Solves', type: 'uint32' },
      { internalType: 'uint32', name: 'solves', type: 'uint32' },
      { internalType: 'uint32', name: 'balance', type: 'uint32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint32', name: '', type: 'uint32' },
    ],
    name: 'hasSolvedPuzzle',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'hasUsedAuthorshipToken',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_id', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'puzzleId',
    outputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_from', type: 'address' },
      { internalType: 'address', name: '_to', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_from', type: 'address' },
      { internalType: 'address', name: '_to', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
      { internalType: 'bytes', name: '_data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_operator', type: 'address' },
      { internalType: 'bool', name: '_approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint32', name: '_puzzleId', type: 'uint32' }],
    name: 'setFermat',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_puzzleId', type: 'uint32' },
      { internalType: 'uint120', name: '_colors', type: 'uint120' },
    ],
    name: 'setPuzzleColors',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_puzzleId', type: 'uint32' },
      { internalType: 'uint256', name: '_solution', type: 'uint256' },
    ],
    name: 'solve',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: '_interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_tokenId', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_from', type: 'address' },
      { internalType: 'address', name: '_to', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export const TEAM_REGISTRY_ABI = [
  {
    inputs: [{ internalType: 'uint256', name: '_id', type: 'uint256' }],
    name: 'IsTeamLeader',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_id', type: 'uint256' },
      { internalType: 'address', name: '_member', type: 'address' },
    ],
    name: 'NotInTeam',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_id', type: 'uint256' }],
    name: 'NotTeamLeader',
    type: 'error',
  },
  { inputs: [], name: 'Unauthorized', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: '_id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: '_leader', type: 'address' },
    ],
    name: 'CreateTeam',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: '_id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: '_member', type: 'address' },
      { indexed: true, internalType: 'bool', name: '_approved', type: 'bool' },
    ],
    name: 'SetApprovalForMember',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: '_from', type: 'uint256' },
      { indexed: true, internalType: 'uint256', name: '_to', type: 'uint256' },
      { indexed: true, internalType: 'address', name: '_member', type: 'address' },
    ],
    name: 'TransferTeam',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: '_id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: '_from', type: 'address' },
      { indexed: true, internalType: 'address', name: '_to', type: 'address' },
    ],
    name: 'TransferTeamLeadership',
    type: 'event',
  },
  {
    inputs: [{ internalType: 'address[]', name: '_members', type: 'address[]' }],
    name: 'batchRemoveMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address[]', name: '_members', type: 'address[]' },
      { internalType: 'bool', name: '_approved', type: 'bool' },
    ],
    name: 'batchSetApprovalForMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address[]', name: '_members', type: 'address[]' }],
    name: 'createTeam',
    outputs: [{ internalType: 'uint256', name: 'newTeamId', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'getApproved',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'getTeam',
    outputs: [
      { internalType: 'uint248', name: 'id', type: 'uint248' },
      { internalType: 'bool', name: 'isLeader', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_member', type: 'address' }],
    name: 'removeMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_member', type: 'address' },
      { internalType: 'bool', name: '_approved', type: 'bool' },
    ],
    name: 'setApprovalForMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_to', type: 'uint256' }],
    name: 'transferTeam',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_member', type: 'address' }],
    name: 'transferTeamLeadership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export const CURTA_GOLF_ABI = [
  {
    inputs: [
      { internalType: 'contract Par', name: '_par', type: 'address' },
      { internalType: 'contract IPurityChecker', name: '_purityChecker', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AddressIsZeroAddress', type: 'error' },
  {
    inputs: [{ internalType: 'bytes32', name: '_key', type: 'bytes32' }],
    name: 'CommitTooNew',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint32', name: '_id', type: 'uint32' }],
    name: 'CourseDoesNotExist',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '_key', type: 'bytes32' }],
    name: 'KeyAlreadyCommitted',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '_key', type: 'bytes32' }],
    name: 'KeyNotCommitted',
    type: 'error',
  },
  { inputs: [], name: 'PollutedSolution', type: 'error' },
  { inputs: [], name: 'Unauthorized', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint32', name: 'id', type: 'uint32' },
      { indexed: true, internalType: 'contract ICourse', name: 'course', type: 'address' },
    ],
    name: 'AddCourse',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'player', type: 'address' },
      { indexed: true, internalType: 'bytes32', name: 'key', type: 'bytes32' },
    ],
    name: 'CommitSolution',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint32', name: 'courseId', type: 'uint32' },
      { indexed: true, internalType: 'uint256', name: 'allowedOpcodes', type: 'uint256' },
    ],
    name: 'SetAllowedOpcodes',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IPurityChecker',
        name: 'purityChecker',
        type: 'address',
      },
    ],
    name: 'SetPurityChecker',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint32', name: 'courseId', type: 'uint32' },
      { indexed: true, internalType: 'address', name: 'recipient', type: 'address' },
      { indexed: false, internalType: 'address', name: 'target', type: 'address' },
      { indexed: true, internalType: 'uint32', name: 'gasUsed', type: 'uint32' },
    ],
    name: 'SubmitSolution',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint32', name: 'courseId', type: 'uint32' },
      { indexed: true, internalType: 'address', name: 'recipient', type: 'address' },
      { indexed: true, internalType: 'uint32', name: 'gasUsed', type: 'uint32' },
    ],
    name: 'UpdateKing',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'contract ICourse', name: '_course', type: 'address' },
      { internalType: 'uint256', name: '_allowedOpcodes', type: 'uint256' },
    ],
    name: 'addCourse',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_spender', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '_key', type: 'bytes32' }],
    name: 'commit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'courseId',
    outputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint32', name: 'courseId', type: 'uint32' }],
    name: 'getAllowedOpcodes',
    outputs: [{ internalType: 'uint256', name: 'getAllowedOpcodes', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'key', type: 'bytes32' }],
    name: 'getCommit',
    outputs: [
      { internalType: 'address', name: 'player', type: 'address' },
      { internalType: 'uint96', name: 'timestamp', type: 'uint96' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint32', name: 'courseId', type: 'uint32' }],
    name: 'getCourse',
    outputs: [
      { internalType: 'contract ICourse', name: 'course', type: 'address' },
      { internalType: 'uint32', name: 'gasUsed', type: 'uint32' },
      { internalType: 'uint32', name: 'solutionCount', type: 'uint32' },
      { internalType: 'uint32', name: 'kingCount', type: 'uint32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_id', type: 'uint256' }],
    name: 'getTokenData',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'owner', type: 'address' },
          { internalType: 'uint96', name: 'metadata', type: 'uint96' },
        ],
        internalType: 'struct KingERC721.TokenData',
        name: 'tokenData',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_id', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'par',
    outputs: [{ internalType: 'contract Par', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'purityChecker',
    outputs: [{ internalType: 'contract IPurityChecker', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_from', type: 'address' },
      { internalType: 'address', name: '_to', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_from', type: 'address' },
      { internalType: 'address', name: '_to', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
      { internalType: 'bytes', name: '_data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_courseId', type: 'uint32' },
      { internalType: 'uint256', name: '_allowedOpcodes', type: 'uint256' },
    ],
    name: 'setAllowedOpcodes',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_operator', type: 'address' },
      { internalType: 'bool', name: '_approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract IPurityChecker', name: '_purityChecker', type: 'address' }],
    name: 'setPurityChecker',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint32', name: '_courseId', type: 'uint32' },
      { internalType: 'bytes', name: '_solution', type: 'bytes' },
      { internalType: 'address', name: '_recipient', type: 'address' },
      { internalType: 'uint256', name: '_salt', type: 'uint256' },
    ],
    name: 'submit',
    outputs: [{ internalType: 'uint32', name: '', type: 'uint32' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: '_interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_id', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_from', type: 'address' },
      { internalType: 'address', name: '_to', type: 'address' },
      { internalType: 'uint256', name: '_id', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];
